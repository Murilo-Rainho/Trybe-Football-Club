swagger: "2.0"
info:
  description: "This is a simple crud with a little solid applied, using typescript and sequelize."
  version: "1.0.0"
  title: "Football API"
  contact:
    email: "murilorainho01@gmail.com"
host: "localhost:3001"
basePath: "/doc"
tags:
- name: "login"
  description: "Authentication route"
- name: "clubs"
  description: "Operations about clubs"
- name: "matchs"
  description: "Operations about matches"
- name: "leaderboards"
  description: "Operations to view rankings"
schemes:
- "http"
paths:
  /login:
    post:
      tags:
      - "login"
      summary: "Login to get access to the token"
      description: "Returns the user's object (without password) and the token"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "A object to find and validate user login"
        required: true
        schema:
          type: "object"
          properties:
            email:
              type: string
            password:
              type: string
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "object"
            properties:
              user:
                type: "object"
                properties:
                  id:
                    type: number
                  username:
                    type: string
                  role:
                    type: string
                  email:
                    type: string
              token:
                type: string
        "401":
          description: "Invalid/missing input"
          schema:
            type: "object"
            properties:
              message:
                type: string
  /login/validate:
    get:
      tags:
      - "login"
      summary: "Verify token by header"
      description: "Returns the user's role"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "Token to check if it matches some user"
        required: true
        type: string
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: string
        "401":
          description: "Invalid/missing 'authorization' input in the header"
          schema:
            type: "object"
            properties:
              message:
                type: string
  /clubs:
    get:
      tags:
      - "clubs"
      summary: "Get all clubs"
      description: "Returns a array of club's object"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: number
                clubName:
                  type: string
  /clubs/{id}:
    get:
      tags:
      - "clubs"
      summary: "Find club by ID"
      description: "Returns a single club"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of a club to find it"
        required: true
        type: number
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "object"
            properties:
              id:
                type: number
              clubName:
                type: string
        "400":
          description: "Invalid/missing 'id' property in path"
          schema:
            type: "object"
            properties:
              message:
                type: string
        "404":
          description: "Club not found"
          schema:
            type: "object"
            properties:
              message:
                type: string
  /matchs:
    get:
      tags:
      - "matchs"
      summary: "Get all matches"
      description: ""
      produces:
      - "application/json"
      parameters:
      - name: "inProgress"
        in: "query"
        description: "To filter matches in progress or not"
        required: false
        type: boolean
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: number
                homeTeam:
                  type: number
                homeTeamGoals:
                  type: number
                awayTeam:
                  type: number
                awayTeamGoals:
                  type: number
                inProgress:
                  type: boolean
                homeClub:
                  type: "object"
                  properties:
                    id:
                      type: number
                    clubName:
                      type: string
                awayClub:
                  type: "object"
                  properties:
                    id:
                      type: number
                    clubName:
                      type: string
        "400":
          description: "Invalid 'inProgress' property in query"
          schema:
            type: "object"
            properties:
              message:
                type: string
    post:
      tags:
      - "matchs"
      summary: "Create a match"
      description: "If everything went right, returns the match's object"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "authorization"
        description: "Token to authorize"
        required: true
        type: string
      - in: "body"
        name: "body"
        description: "An object with all the attributes you need to create a match"
        required: true
        schema:
          type: "object"
          properties:
            homeTeam:
              type: number
            awayTeam:
              type: number
            homeTeamGoals:
              type: number
            awayTeamGoals:
              type: number
            inProgress:
              type: boolean
      responses:
        "201":
          description: "Everything went right"
          schema:
            type: "object"
            properties:
              homeTeam:
                type: number
              awayTeam:
                type: number
              homeTeamGoals:
                type: number
              awayTeamGoals:
                type: number
              inProgress:
                type: boolean
        "401":
          description: "Invalid/missing input"
          schema:
            type: "object"
            properties:
              message:
                type: string
  /matchs/{id}:
    patch:
      tags:
      - "matchs"
      summary: "Change some attribute of a match"
      description: "Returns the edited match object"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of a match to find and edit it"
        required: true
        type: number
      - in: "header"
        name: "authorization"
        description: "Token to authorize"
        required: true
        type: string
      - in: "body"
        name: "body"
        description: "An object with the attributes to edit a match"
        schema:
          type: "object"
          properties:
            homeTeam:
              type: number
            awayTeam:
              type: number
            homeTeamGoals:
              type: number
            awayTeamGoals:
              type: number
            inProgress:
              type: boolean
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "object"
            properties:
              homeTeam:
                type: number
              awayTeam:
                type: number
              homeTeamGoals:
                type: number
              awayTeamGoals:
                type: number
              inProgress:
                type: boolean
        "401":
          description: "Invalid/missing input"
          schema:
            type: "object"
            properties:
              message:
                type: string
        "404":
          description: "Match not found"
          schema:
            type: "object"
            properties:
              message:
                type: string
  /matchs/{id}/finish:
    patch:
      tags:
      - "matchs"
      summary: "Change 'inProgress' attribute of a match to 'false'"
      description: "Returns a message when all went right"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of a match to find and finish it"
        required: true
        type: number
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "object"
            properties:
              message:
                type: string
        "400":
          description: "Invalid/missing 'id' property"
          schema:
            type: "object"
            properties:
              message:
                type: string
        "404":
          description: "Match not found"
          schema:
            type: "object"
            properties:
              message:
                type: string
        "409":
          description: "Match already finish"
          schema:
            type: "object"
            properties:
              message:
                type: string
  /leaderboard:
    get:
      tags:
      - "leaderboards"
      summary: "Get rating by all matches"
      description: "returns leaderboard according to all matches, both home and away"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: string
                totalPoints:
                  type: number
                totalGames:
                  type: number
                totalVictories:
                  type: number
                totalDraws:
                  type: number
                totalLosses:
                  type: number
                goalsFavor:
                  type: number
                goalsOwn:
                  type: number
                goalsBalance:
                  type: number
                efficiency:
                  type: number
  /leaderboard/home:
    get:
      tags:
      - "leaderboards"
      summary: "Get rating by home matches"
      description: "returns leaderboard according to home matches"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: string
                totalPoints:
                  type: number
                totalGames:
                  type: number
                totalVictories:
                  type: number
                totalDraws:
                  type: number
                totalLosses:
                  type: number
                goalsFavor:
                  type: number
                goalsOwn:
                  type: number
                goalsBalance:
                  type: number
                efficiency:
                  type: number
  /leaderboard/away:
    get:
      tags:
      - "leaderboards"
      summary: "Get rating by away matches"
      description: "returns leaderboard according to away matches"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Everything went right"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: string
                totalPoints:
                  type: number
                totalGames:
                  type: number
                totalVictories:
                  type: number
                totalDraws:
                  type: number
                totalLosses:
                  type: number
                goalsFavor:
                  type: number
                goalsOwn:
                  type: number
                goalsBalance:
                  type: number
                efficiency:
                  type: number
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
        format: "string"
      role:
        type: "string"
        format: "string"
      email:
        type: "string"
        format: "string"
      password:
        type: "string"
        format: "string"
    xml:
      name: "User"
  Club:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      clubName:
        type: "string"
        format: "string"
    xml:
      name: "Category"
  Matchs:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      homeTeam:
        type: "integer"
        format: "int64"
      awayTeam:
        type: "integer"
        format: "int64"
      homeTeamGoals:
        type: "integer"
        format: "int64"
      awayTeamGoals:
        type: "integer"
        format: "int64"
      inProgress:
        type: "boolean"
        format: "boolean"
    xml:
      name: "Pet"
